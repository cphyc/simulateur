### Starting build.
# Target: netlist_sim2.ml.depends, tags: { extension:ml, file:netlist_sim2.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules netlist_sim2.ml > netlist_sim2.ml.depends
# Target: display.ml.depends, tags: { extension:ml, file:display.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules display.ml > display.ml.depends
# Target: memo.ml.depends, tags: { extension:ml, file:memo.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules memo.ml > memo.ml.depends
# Target: smap.ml.depends, tags: { extension:ml, file:smap.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules smap.ml > smap.ml.depends
# Target: smap.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:smap.cmo, file:smap.ml, implem, ocaml, quiet }
ocamlc unix.cma graphics.cma -c -o smap.cmo smap.ml
# Target: netgraph.ml.depends, tags: { extension:ml, file:netgraph.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules netgraph.ml > netgraph.ml.depends
# Target: memo.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:memo.cmo, file:memo.ml, implem, ocaml, quiet }
ocamlc unix.cma graphics.cma -c -o memo.cmo memo.ml
# Target: netlist_ast.ml.depends, tags: { extension:ml, file:netlist_ast.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules netlist_ast.ml > netlist_ast.ml.depends
# Target: netlist_ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:netlist_ast.cmo, file:netlist_ast.ml, implem, ocaml, quiet }
ocamlc unix.cma graphics.cma -c -o netlist_ast.cmo netlist_ast.ml
# Target: netlist.ml.depends, tags: { extension:ml, file:netlist.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules netlist.ml > netlist.ml.depends
# Target: netlist_lexer.mll, tags: { extension:mll, file:netlist_lexer.mll, lexer, ocaml, ocamllex, quiet }
/usr/bin/ocamllex.opt -q netlist_lexer.mll
# Target: netlist_lexer.ml.depends, tags: { extension:ml, file:netlist_lexer.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules netlist_lexer.ml > netlist_lexer.ml.depends
# Target: netlist_parser.mly.depends, tags: { extension:mly, file:netlist_parser.mly, menhir_ocamldep, ocaml, ocamldep, quiet }
/usr/bin/menhir --raw-depend --ocamldep '/usr/bin/ocamldep.opt -modules' netlist_parser.mly > netlist_parser.mly.depends
# Target: netlist_parser.mly, tags: { extension:mly, file:netlist_parser.mly, menhir, ocaml, parser, quiet }
/usr/bin/menhir --ocamlc 'ocamlc unix.cma graphics.cma' --infer netlist_parser.mly
# Target: netlist_parser.mli.depends, tags: { extension:mli, file:netlist_parser.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules netlist_parser.mli > netlist_parser.mli.depends
# Target: netlist_parser.cmi, tags: { byte, compile, extension:mli, file:netlist_parser.mli, interf, ocaml, quiet }
ocamlc unix.cma graphics.cma -c -o netlist_parser.cmi netlist_parser.mli
# Target: netlist_lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:netlist_lexer.cmo, file:netlist_lexer.ml, implem, ocaml, quiet }
ocamlc unix.cma graphics.cma -c -o netlist_lexer.cmo netlist_lexer.ml
# Target: scheduler.ml.depends, tags: { extension:ml, file:scheduler.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules scheduler.ml > scheduler.ml.depends
# Target: netgraph.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:netgraph.cmo, file:netgraph.ml, implem, ocaml, quiet }
ocamlc unix.cma graphics.cma -c -o netgraph.cmo netgraph.ml
# Target: reducegraph.ml.depends, tags: { extension:ml, file:reducegraph.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules reducegraph.ml > reducegraph.ml.depends
# Target: reducegraph.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:reducegraph.cmo, file:reducegraph.ml, implem, ocaml, quiet }
ocamlc unix.cma graphics.cma -c -o reducegraph.cmo reducegraph.ml
# Target: sim2.ml.depends, tags: { extension:ml, file:sim2.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules sim2.ml > sim2.ml.depends
# Target: scheduler.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:scheduler.cmo, file:scheduler.ml, implem, ocaml, quiet }
ocamlc unix.cma graphics.cma -c -o scheduler.cmo scheduler.ml
# Target: display.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:display.cmo, file:display.ml, implem, ocaml, quiet }
ocamlc unix.cma graphics.cma -c -o display.cmo display.ml
# Target: netlist.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:netlist.cmo, file:netlist.ml, implem, ocaml, quiet }
ocamlc unix.cma graphics.cma -c -o netlist.cmo netlist.ml
# Target: sim2.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:sim2.cmo, file:sim2.ml, implem, ocaml, quiet }
ocamlc unix.cma graphics.cma -c -o sim2.cmo sim2.ml
# Target: netlist_sim2.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:netlist_sim2.cmo, file:netlist_sim2.ml, implem, ocaml, quiet }
ocamlc unix.cma graphics.cma -c -o netlist_sim2.cmo netlist_sim2.ml
# Target: netlist_parser.ml.depends, tags: { extension:ml, file:netlist_parser.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules netlist_parser.ml > netlist_parser.ml.depends
# Target: netlist_parser.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:netlist_parser.cmo, file:netlist_parser.ml, implem, ocaml, quiet }
ocamlc unix.cma graphics.cma -c -o netlist_parser.cmo netlist_parser.ml
# Target: netlist_sim2.byte, tags: { byte, dont_link_with, extension:byte, file:netlist_sim2.byte, link, ocaml, program, quiet }
ocamlc unix.cma graphics.cma display.cmo smap.cmo memo.cmo netlist_ast.cmo netgraph.cmo netlist_parser.cmo netlist_lexer.cmo netlist.cmo reducegraph.cmo scheduler.cmo sim2.cmo netlist_sim2.cmo -o netlist_sim2.byte
# Compilation successful.

# Subleq watch program
# 5 clock ticks per instruction
# Instructions padding to match second
# Output cells
# -1 SECONDS
# -2 MINUTES
# -3 HOURS
# -4 DAY
# -5 MONTH
# -6 YEAR
# -7 WEEKDAY
# -8 special ???

# Initialization

0 0 ;

m4 -2 ;
m15 -3 ;
m55 -4 ;
mone -5 ;
m2013 -6 ;
mone -7 ;

0 0 start

# Memory map

## CONSTANTS ##

m1024:-1024
m2013:-2013

m400:-400
m100:-100

m55:-55

m32:-32
m31:-31
m30:-30
m29:-29

m22:-22
m15:-15

m4:-4

mtwo:-2
mone:-1
one:1

p3:3
p5:5

seven:7

p10:10

twelve:12

p15:15
p20:20


p35:35
p40:40
p45:45

p23:23
p59:59

p100:100
p399:399

## Variables ##

# zero and tmp are temporaries
tmp:0
zero:0

# 1024 Hz program
cyclesleft:1024

# do {
start:
p10 cyclesleft main   ##
0 0 start

main:
m1024 cyclesleft main ##

p35 cyclesleft ;      ##
### INCR SECONDS ###
tmp tmp ;
zero zero ;
mone -1 ;
# zero = - seconds
-1 zero ;
# tmp = - zero = seconds
zero tmp ;
# if tmp <= 59, goto start
p59 tmp start

p40 cyclesleft ;  ##
# reset seconds
-1 -1 ;

### INCR MINUTES ###
tmp tmp ;
zero zero ;
mone -2 ;
# zero = - minutes
-2 zero ;
# tmp = - zero = minutes
zero tmp ;
# if tmp <= 59, goto start
p59 tmp start

p40 cyclesleft ;  ##
# reset minutes
-2 -2 ;

### INCR HOURS ###
tmp tmp ;
zero zero ;
mone -3 ;
# zero = - hours
-3 zero ;
# tmp = - zero = hours
zero tmp ;
# if tmp <= 23, goto start
p23 tmp start

p40 cyclesleft ;  ##
# reset hours
-3 -3 ;

## INCR WEEKDAYS ##
tmp tmp ;
zero zero ;
mone -7 ;
# zero = - weekdays
-7 zero ;
# tmp = - zero = weekdays
zero tmp ;

# if tmp <= 7
seven tmp newday

p40 cyclesleft ;  ##
-7 -7 ;

newday:
### INCR DAYS ###
tmp tmp ;
zero zero ;
mone -4 ;

twelve tmp ;

# check current month
# December ?
tmp zero ;
-5 zero ttyonedays
# November ?
p10 cyclesleft ;  ##
one zero trtydays
# October ?
p10 cyclesleft ;  ##
one zero ttyonedays
# September ?
p10 cyclesleft ;  ##
one zero trtydays
# August ?
p10 cyclesleft ;  ##
one zero ttyonedays
# July ?
p10 cyclesleft ;  ##
one zero ttyonedays
# June ?
p10 cyclesleft ;  ##
one zero trtydays
# May ?
p10 cyclesleft ;  ##
one zero ttyonedays
# April ?
p10 cyclesleft ;  ##
one zero trtydays
# March ?
p10 cyclesleft ;  ##
one zero ttyonedays
# February ?
p10 cyclesleft ;  ##
one zero february
# January ?
p10 cyclesleft ;  ##
zero zero ttyonedays

february:
p15 cyclesleft ;  ##
zero zero ;
-6 zero ;
# Is the year congruent to 400 ?
loop400:
p10 cyclesleft ;  ##
m400 zero loop400
p10 cyclesleft ;  ##
p399 zero loop100
p10 cyclesleft ;  ##
zero zero ttyeightdays
# to 100 ?
loop100:
p10 cyclesleft ;  ##
m100 zero loop100
p10 cyclesleft ;  ##
one zero ttyeightdays
p10 cyclesleft ;  ##
p100 zero ;
# to 4 ?
loop4:
p10 cyclesleft ;  ##
m4 zero loop4
p10 cyclesleft ;  ##
p3 zero ttyeightdays
p10 cyclesleft ;  ##
zero zero ttyninedays

ttyeightdays:
p15 cyclesleft ;  ##
m29 zero ;
0 0 zrdays

ttyninedays:
p15 cyclesleft ;  ##
m30 zero ;
0 0 zrdays

trtydays:
p15 cyclesleft ;  ##
m31 zero ;
0 0 zrdays

ttyonedays:
p15 cyclesleft ;  ##
m32 zero ;
0 0 zrdays

zrdays:
p15 cyclesleft ;  ##
# if days >= value stored in zero then incr month
-4 zero newmonth
0 0 start

newmonth:
p45 cyclesleft ;  ##
-4 -4 ;
mone -4 ;

### INCR MONTHS ###
tmp tmp ;
zero zero ;
mone -5 ;
# zero = - months
-5 zero ;
# tmp = - zero = months
zero tmp ;
# if tmp <= 12, goto start
twelve tmp start

p45 cyclesleft ;  ##
# reset months
-5 -5 ;
mone -5 ;

### INCR YEARS ###
tmp tmp ;
zero zero ;
mone -6 ;
# zero = - years
-6 zero ;
# tmp = - zero = years
zero tmp ;

# jump to start 
0 0 start

# }
